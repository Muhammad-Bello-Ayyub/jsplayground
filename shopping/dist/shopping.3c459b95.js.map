{"version":3,"sources":["shopping.js"],"names":["shoppingForm","document","querySelector","list","items","handleSubmit","e","preventDefault","console","log","name","currentTarget","item","value","id","Date","now","complete","push","concat","length","target","reset","dispatchEvent","CustomEvent","displayItems","html","map","join","innerHTML","mirrorToLocalStorage","info","localStorage","setItem","JSON","stringify","restoreFromLocalStorage","lsItems","parse","getItem","_items","apply","_toConsumableArray","deleteItem","filter","markAsComplete","itemRef","find","addEventListener","parseInt","matches"],"mappings":"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","file":"shopping.3c459b95.js","sourceRoot":"..","sourcesContent":["/* eslint-disable */\nconst shoppingForm = document.querySelector('.shopping');\nconst list = document.querySelector('.list');\n\n// We need an array to hold our state\nlet items = [];\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  console.log('submitted!!');\n  const name = e.currentTarget.item.value;\n  // if its empty, then dont submit it\n  if (!name) return;\n\n  const item = {\n    name,\n    id: Date.now(),\n    complete: false,\n  };\n  // Push the items into our state\n  items.push(item);\n  console.log(`There are now ${items.length} in your state`);\n  // Clear the form\n  e.target.reset();\n  // fire off a custom event that will tell anyone else who cares that the items have been updated!\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nfunction displayItems() {\n  console.log(items);\n  const html = items\n    .map(\n      item => `<li class=\"shopping-item\">\n      <input\n        value=\"${item.id}\"\n        type=\"checkbox\"\n        ${item.complete && 'checked'}\n      >\n      <span class=\"itemName\">${item.name}</span>\n      <button\n        aria-label=\"Remove ${item.name}\"\n        value=\"${item.id}\"\n      >&times;</buttonaria-label=\"Remove>\n  </li>`\n    )\n    .join('');\n  list.innerHTML = html;\n}\n\nfunction mirrorToLocalStorage() {\n  console.info('Saving items to localstorage');\n  localStorage.setItem('items', JSON.stringify(items));\n}\n\nfunction restoreFromLocalStorage() {\n  console.info('Restoring from LS');\n  // pull the items from LS\n  const lsItems = JSON.parse(localStorage.getItem('items'));\n  if (lsItems.length) {\n    // items = lsItems;\n    // lsItems.forEach(item => items.push(item));\n    // items.push(lsItems[0], lsItems[1]);\n    items.push(...lsItems);\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n  }\n}\n\nfunction deleteItem(id) {\n  console.log('DELETIENG ITEM', id);\n  // update our items array without this one\n  items = items.filter(item => item.id !== id);\n  console.log(items);\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nfunction markAsComplete(id) {\n  console.log('Marking as complete', id);\n  const itemRef = items.find(item => item.id === id);\n  itemRef.complete = !itemRef.complete;\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nshoppingForm.addEventListener('submit', handleSubmit);\nlist.addEventListener('itemsUpdated', displayItems);\nlist.addEventListener('itemsUpdated', mirrorToLocalStorage);\n// Event Delegation: We listen or the click on the list <ul> but then delegate the click over to the button if that is what was clicked\nlist.addEventListener('click', function(e) {\n  const id = parseInt(e.target.value);\n  if (e.target.matches('button')) {\n    deleteItem(id);\n  }\n  if (e.target.matches('input[type=\"checkbox\"]')) {\n    markAsComplete(id);\n  }\n});\nrestoreFromLocalStorage();"]}